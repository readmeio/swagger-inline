// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Swagger Inline OpenAPI supports JSON 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "ErrorModel": Object {
        "properties": Object {
          "message": Object {
            "type": "string",
          },
        },
        "required": Array [
          "message",
        ],
      },
      "Pet": Object {
        "properties": Object {
          "id": Object {
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "type": "string",
          },
          "tag": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
        ],
      },
    },
  },
  "info": Object {
    "title": "Example OpenAPI base file for \`swagger-inline\`.",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/pets": Object {
      "get": Object {
        "description": "Returns all pets from the system that the user has access to",
        "operationId": "findPets",
        "parameters": Array [
          Object {
            "description": "tags to filter by",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": Object {
              "items": Object {
                "type": "string",
              },
              "type": "array",
            },
            "style": "form",
          },
          Object {
            "description": "maximum number of results to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": Object {
              "format": "int32",
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/Pet",
                  },
                  "type": "array",
                },
              },
            },
            "description": "pet response",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ErrorModel",
                },
              },
            },
            "description": "unexpected error",
          },
        },
      },
      "post": Object {
        "description": "Creates a new pet in the store. Duplicates are allowed",
        "operationId": "addPet",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/Pet",
              },
            },
          },
          "description": "Pet to add to the store",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/Pet",
                  },
                  "type": "array",
                },
              },
            },
            "description": "pet response",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ErrorModel",
                },
              },
            },
            "description": "unexpected error",
          },
        },
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "description": "deletes a single pet based on the ID supplied",
        "operationId": "deletePet",
        "parameters": Array [
          Object {
            "description": "ID of pet to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "format": "int64",
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "pet deleted",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ErrorModel",
                },
              },
            },
            "description": "unexpected error",
          },
        },
      },
      "get": Object {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findPetById",
        "parameters": Array [
          Object {
            "description": "ID of pet to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "format": "int64",
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/Pet",
                  },
                  "type": "array",
                },
              },
            },
            "description": "pet response",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ErrorModel",
                },
              },
            },
            "description": "unexpected error",
          },
        },
      },
    },
  },
  "servers": Array [
    Object {
      "url": "http://petstore.swagger.io/v2",
    },
  ],
}
`;

exports[`Swagger Inline OpenAPI supports YAML 1`] = `
"openapi: 3.0.3
info:
  title: Example OpenAPI base file for \`swagger-inline\`.
  version: '1.0'
servers:
  - url: http://petstore.swagger.io/v2
paths:
  /pets:
    get:
      description: Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /pets/{id}:
    get:
      description: >-
        Returns a user based on a single ID, if the user does not have access to
        the pet
      operationId: findPetById
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    ErrorModel:
      required:
        - message
      properties:
        message:
          type: string
"
`;

exports[`Swagger Inline Swagger supports JSON 1`] = `
Object {
  "basePath": "/api",
  "components": Object {
    "schemas": Object {
      "Pet": Object {
        "properties": Object {
          "id": Object {
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "type": "string",
          },
          "tag": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
        ],
      },
    },
  },
  "host": "petstore.swagger.io",
  "paths": Object {
    "/pets": Object {
      "get": Object {
        "description": "Returns all pets from the system that the user has access to",
        "operationId": "findPets",
        "parameters": Array [
          Object {
            "collectionFormat": "csv",
            "description": "tags to filter by",
            "in": "query",
            "items": Object {
              "type": "string",
            },
            "name": "tags",
            "required": false,
            "type": "array",
          },
          Object {
            "description": "maximum number of results to return",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
          },
        ],
        "produces": Array [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html",
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "items": Object {
                "$ref": "#/definitions/Pet",
              },
              "type": "array",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "$ref": "#/definitions/ErrorModel",
            },
          },
        },
      },
      "post": Object {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "addPet",
        "parameters": Array [
          Object {
            "description": "Pet to add to the store",
            "in": "body",
            "name": "pet",
            "required": true,
            "schema": Object {
              "$ref": "#/definitions/NewPet",
            },
          },
        ],
        "produces": Array [
          "application/json",
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "$ref": "#/definitions/Pet",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "$ref": "#/definitions/ErrorModel",
            },
          },
        },
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "description": "deletes a single pet based on the ID supplied",
        "operationId": "deletePet",
        "parameters": Array [
          Object {
            "description": "ID of pet to delete",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "pet deleted",
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "$ref": "#/definitions/ErrorModel",
            },
          },
        },
      },
      "get": Object {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findPetById",
        "parameters": Array [
          Object {
            "description": "ID of pet to fetch",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
          },
        ],
        "produces": Array [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html",
        ],
        "responses": Object {
          "200": Object {
            "description": "pet response",
            "schema": Object {
              "$ref": "#/definitions/Pet",
            },
          },
          "default": Object {
            "description": "unexpected error",
            "schema": Object {
              "$ref": "#/definitions/ErrorModel",
            },
          },
        },
      },
    },
  },
  "schemes": Array [
    "http",
  ],
  "swagger": "2.0",
}
`;

exports[`Swagger Inline Swagger supports YAML 1`] = `
"swagger: 2
host: petstore.swagger.io
basePath: /api
schemes:
  - http
paths:
  /pets:
    get:
      description: Returns all pets from the system that the user has access to
      operationId: findPets
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewPet'
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /pets/{id}:
    get:
      description: >-
        Returns a user based on a single ID, if the user does not have access to
        the pet
      operationId: findPetById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
"
`;
